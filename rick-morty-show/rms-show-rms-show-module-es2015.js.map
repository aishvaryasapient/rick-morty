{"version":3,"sources":["./src/app/rms-show/rms-detail/rms-detail.component.ts","./src/app/rms-show/rms-detail/rms-detail.component.html","./src/app/rms-show/rms-list/rms-list.component.ts","./src/app/rms-show/rms-list/rms-list.component.html","./src/app/rms-show/rms-show-routing.module.ts","./src/app/rms-show/rms-show.module.ts","./src/app/rms-show/rms-show.service.ts"],"names":[],"mappings":"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","file":"rms-show-rms-show-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'rms-rms-detail',\n  templateUrl: './rms-detail.component.html',\n  styleUrls: ['./rms-detail.component.scss']\n})\nexport class RmsDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>rms-detail works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RmsShowService } from '../rms-show.service';\nimport {Page, Character, FILTER} from './../models/models';\nimport { CHIPMODEL } from 'src/app/shared/model/chip.model';\n\n@Component({\n  selector: 'rms-rms-list',\n  templateUrl: './rms-list.component.html',\n  styleUrls: ['./rms-list.component.scss']\n})\nexport class RmsListComponent implements OnInit {\n  searchName: string;\n  sortOrder: boolean;\n  page:Page = {\n    count:0,\n    currentpage:1,\n    pages:0,\n    perPage:20\n  };\n  allCharacters: any[];\n  filterList:FILTER[];\n  selectedFilter: CHIPMODEL[]=[];\n  constructor(private _rmsService: RmsShowService) { }\n\n  ngOnInit(): void {\n    this.filterList = this._rmsService.getAllFilterList();\n    this.getAllCharacters(1)\n  }\n\n  getAllCharacters(page:number){\n    let query = '';\n    if(this.selectedFilter.length > 0){\n      this.selectedFilter.forEach(item=>{\n        query +='&' +item.name.name.toLowerCase() +'='+item.item.name \n      })\n    }\n    if(this.searchName){\n      query += '&name='+this.searchName\n    }\n    this._rmsService.getAllChjaracters(page,query).subscribe(\n      (res:{info:any,results:Character[]})=>{\n        this.page.count = res.info.count;\n        this.page.pages = res.info.pages;\n        this.allCharacters = res.results;\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n  filterChange(evt){\n    console.log(evt);\n    let index = this.selectedFilter.findIndex(sFilter=> sFilter.item === evt.item);\n    if(index === -1){\n      this.selectedFilter.push(evt);\n    }else{\n     let mainCat =  this.filterList.find(item=> item.name === this.selectedFilter[index].name.name);\n     let subItem = mainCat.items.find(sItem=> sItem.name === this.selectedFilter[index].item.name);\n     subItem.selected = false;\n      this.selectedFilter.splice(index,1);\n    }\n    this.getAllCharacters(this.page.currentpage);\n  }\n\n  goToPage(evt){\n    this.page.currentpage = evt;\n    this.getAllCharacters(this.page.currentpage);\n  }\n\n  sortingOnChange(val){\n    this.sortOrder = val;\n    this.allCharacters = [...this.allCharacters]\n  }\n}\n","\n\n\n\n<div fxLayout=\"row\" fxLayout.xs=\"column\" fxFlex fxLayoutGap=\"20px\">\n    <div fxLayout=\"column\" fxFlex=\"18\" fxFlexOffset=\"20px\" class=\"p-fixed\" >\n        <h3>Filter</h3>\n        <rms-filter [filterList]=\"filterList\" (filterChange)=\"filterChange($event)\"></rms-filter>\n    </div>\n    <div fxLayout=\"column\" fxFlex=\"80\">\n        <div fxLayout=\"column\">\n            <div fxLayout=\"row wrap\">\n                <h3 fxFlex=\"100\">Selected Filters</h3>\n                <ng-container *ngIf=\"selectedFilter.length > 0\">\n                    <rms-chips *ngFor=\"let item of selectedFilter\" [chipsInput]=\"item\" (removeFilter)=\"filterChange($event)\"></rms-chips>\n                </ng-container>\n            </div>\n            <div fxLayoutAlign=\"space-between center\" class=\"search-sort\">\n                \n               <div class=\"search\">\n                   <label for=\"search\">Search By Name</label>\n                    <input type=\"text\" id=\"search\" placeholder=\"\" [(ngModel)]=\"searchName\">\n                    <button color=\"primary\" (click)=\"getAllCharacters(page.currentpage)\">Search</button>\n               </div>\n               <div class=\"sort\">\n                <select (change)=\"sortOrder = $event.target.value\" #sortVar>\n                    <option value=\"false\">Ascending</option>\n                    <option value=\"true\">Descending</option>\n                  </select>\n               </div>\n            </div>\n        </div>\n        <div fxLayout=\"row wrap\" class=\"cards\" fxFlex>\n            <div fxFlex=\"24\" fxFlex.xs=\"47\" class=\"card\" *ngFor=\"let char of allCharacters | sort:'id': sortOrder\">\n               <!-- <p>{{char.name}}</p> -->\n               <div class=\"card-header\">\n                   <div class=\"card-image\">\n                       <img [src]=\"char.image\" alt=\"{{char.image}}\">\n                   </div>\n                   <div class=\"card-title\">\n                       <h2>{{char.name}}</h2>\n                       <p>id: {{char.id}} - {{ char.created| elaspedTime}}</p>\n                   </div>\n               </div>\n               <div class=\"card-info\">\n                    <div class=\"list-item\">\n                        <span>STATUS</span>\n                        <p>{{char.status}}</p>\n                    </div>\n                    <div class=\"list-item\">\n                        <span>SPECIES</span>\n                        <p>{{char.species}}</p>\n                    </div>\n                    <div class=\"list-item\">\n                        <span>GENDER</span>\n                        <p>{{char.gender}}</p>\n                    </div>\n                    <div class=\"list-item\">\n                        <span>ORIGIN</span>\n                        <p>{{char.origin.name}}</p>\n                    </div>\n                    <div class=\"list-item\">\n                        <span>LAST LOCATION</span>\n                        <p>{{char.location.name}}</p>\n                    </div>\n               </div>\n            </div>\n                <!-- <mat-card *ngFor=\"let char of allCharacters\" fxFlex=\"24\" fxFlex.xs=\"48\" fxFlex.sm=\"31\">\n                        <img mat-card-image [src]=\"char.image\" alt=\"{{char.image}}\">\n                        <div class=\"title-custom\">\n                            <span>{{char.name}}/{{char.episode.length}}</span>\n                        </div>\n                    <mat-card-content>\n                    <mat-list>\n                        <mat-list-item>\n                            <span>STATUS</span>\n                            <span class=\"spacer\"></span>\n                            <span>{{char.status}}</span>\n                        </mat-list-item>\n                        <mat-list-item>\n                            <span>SPECIES</span>\n                            <span class=\"spacer\"></span>\n                            <span>{{char.species}}</span>\n                        </mat-list-item>\n                        <mat-list-item>\n                            <span>GENDER</span>\n                            <span class=\"spacer\"></span>\n                            <span>{{char.gender}}</span>\n                        </mat-list-item>\n                        <mat-list-item>\n                            <span>ORIGIN</span>\n                            <span class=\"spacer\"></span>\n                            <span>{{char.origin.name}}</span>\n                        </mat-list-item>\n                        <mat-list-item>\n                            <span>LAST LOCATION</span>\n                            <span class=\"spacer\"></span>\n                            <span>{{char.location.name}}</span>\n                        </mat-list-item>\n                      </mat-list>\n                </mat-card-content>        \n            </mat-card> -->\n        </div>\n        <div fxLayoutAlign=\"end\">\n            <rms-pagination [currentPage]=\"page.currentpage\" [totalItemsCount]=\"page.count\" [perPage]=\"page.perPage\" [pagesToShow]=\"page.pages > 4 ? 4: page.pages\"\n             (prev)=\"goToPage($event)\" (next)=\"goToPage($event)\" (goPage)=\"goToPage($event)\"></rms-pagination>\n        </div>\n    </div>\n    \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RmsListComponent } from './rms-list/rms-list.component';\nimport { RmsDetailComponent } from './rms-detail/rms-detail.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: RmsListComponent\n  },\n  {\n    path:':id',\n    component: RmsDetailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RmsShowRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RmsShowRoutingModule } from './rms-show-routing.module';\nimport { RmsListComponent } from './rms-list/rms-list.component';\nimport { RmsDetailComponent } from './rms-detail/rms-detail.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [RmsListComponent, RmsDetailComponent],\n  imports: [\n    CommonModule,\n    RmsShowRoutingModule,\n    SharedModule\n  ]\n})\nexport class RmsShowModule { }\n","import { Injectable } from '@angular/core';\nimport {environment} from './../../environments/environment';\nimport { throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport {retry, catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RmsShowService {\n\n  constructor(private _http: HttpClient) { \n    console.log(environment.url)\n  }\n\n  getAllFilterList(){\n    let filter = [\n      {\n        name: 'Species',\n        items:[{name:'Human',selected:false}, {name:'Mytholog',selected:false},{name:'Other Species',selected:false}]\n      },\n      {\n        name:'Gender',\n        items:[{name:'Male',selected:false},{name:'Female',selected:false}]\n      },\n      {\n        name: 'Origin',\n        items:[{name:'Unknown',selected:false},{name:'Post Apocalyptic Earth',selected:false}, {name:'Nuptia 4',selected:false},{name:'Other Origins',selected:false}]\n      }\n    ]\n    return filter;\n  }\n  getAllChjaracters(page:number,query:string){\n\n    let queryString = query.length > 0 ? (page+query) :page;\n    return this._http.get(environment.url+'character?page='+queryString).pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n  handleError(error) {\n    console.log(error)\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n    } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n}\n}\n"],"sourceRoot":"webpack:///"}